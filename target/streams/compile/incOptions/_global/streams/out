[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = /Users/ahmedbanko/RIMP-Project/target/scala-2.13/classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_NUM$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Right$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Skip$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$StrParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Left$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Right.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Sequ.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$TokenParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Main$delayedInit$body.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$ArrayVar$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Sequ$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Stars$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$STAR.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$Token.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$CommaParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$AssignArr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Stmt.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Stars.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_RSQRB$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$tilde.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Val.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$RECD.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Rng$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$ArrayVar.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Num$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_OP.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_SEMI$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$SEMIParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$AssignArr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Not$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$RANGE.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$While$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_KWD.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$OPTIONAL.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Chr.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_COMMA$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_STR.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Parser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$BExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$CFUN.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$STAR$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Interpreter.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Pls$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Rexp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Rec$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Main.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_RBRACK$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$RECD$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$SEQ$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$SEQ.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$ZERO$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_RPAREN$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_LBRACK$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$PLUS$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$$anon$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$NTIMES$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Main$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$UpdateArrIndex.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Not.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Bop$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$PLUS.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$CHAR.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Rng.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$AExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$$anonfun$1.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_LSQRB$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$CHAR$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$False$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Aop$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$MapParser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$UpdateArrIndex$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Rec.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$While.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	RIMP_tester.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_NUM.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Pls.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$AltParser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$NumParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_STR$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$CFUN$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$OPTIONAL$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_OP$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$SeqParser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$RANGE$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Chr$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Var$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Left.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Opt.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Bop.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Nts.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_ID$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Nts$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$ALT.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$True$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Aop.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$TokenParser.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_LPAREN$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$NTIMES.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$ALT$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$IdParser$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$ONE$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_ID.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Empty$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$Opt$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$If.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Tokenizer$T_KWD$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$If$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$$tilde$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Lexer$$anon$2.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Var.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Assign$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Assign.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	Parser$Num.class[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: /Users/ahmedbanko/RIMP-Project/target/scala-2.13/classes.bak[0m
